/**
 * Copyright (C) 2017 thinh ho
 * This file is part of 'keestore' which is released under the MIT license.
 * See LICENSE at the project root directory.
 */

description = 'keevault: Thick-client key-value storage'

buildscript {
    repositories { 
        mavenCentral() 
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies { 
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.1.8.RELEASE" 
        classpath "gradle.plugin.edu.sc.seis:macAppBundle:2.1.7"
    }
}

apply plugin: 'distribution'
apply plugin: 'spring-boot'
apply plugin: 'maven-publish'
apply plugin: "edu.sc.seis.macAppBundle"

ext {
    localrepo = project.hasProperty('localrepo') ? localrepo : buildDir.path + "/artifacts"
}

repositories {
    maven {
        url 'https://github.com/kkdt/mavenrepo/raw/master'
    }
}

jar {
    manifest {
        attributes(
            "Name": project.name,
            "Specification-Title": "keestore",
            "Specification-Version": version,
            "Specification-Vendor": "kkdt.one",
            "Implementation-Title": "keestore: keevault",
            "Implementation-Version": version,
            "Implementation-Vendor": "me@kkdt.one"
        )
    }
}

macAppBundle {
    appName = 'keevault'
    mainClassName = "keestore.vault.KeeVault"
    icon = "src/macapp/Default.icns"
    bundleJRE = true
    backgroundImage = "src/macapp/Default.png"
    javaProperties.put("apple.laf.useScreenMenuBar", "true")
}

dependencies {
    compile project(':keestore-api')

    compile 'log4j:log4j:1.2.17'
    compile 'commons-logging:commons-logging:1.1.3'
    compile 'kkdt.generictable:swing-generictable:0.1'

    compile('org.springframework.boot:spring-boot-starter:1.3.3.RELEASE') {
        exclude module: 'spring-boot-starter-logging'
        exclude module: 'spring-boot-starter-log4j'
    }
}

publishing {
    publications {
        create( 'keevaultDists', MavenPublication ) {
            artifact distZip
            artifact distTar
            artifact("$buildDir/distributions/" + project.name + "-" + project.version + ".dmg")
            groupId project.group
            artifactId project.name
            version project.version
        }
    }
    // publish artifacts to local directory
    repositories {
       maven {
          url file(localrepo)
       }
    }
 }
